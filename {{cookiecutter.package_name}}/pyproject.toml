{%- if cookiecutter.build_system == "poetry" -%}
[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = "{{cookiecutter.short_description}}"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Framework :: Pytest",
    "Typing :: Typed",
]
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]
packages = [{ include = "{{cookiecutter.package_name}}" }]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.lint]
optional = true
[tool.poetry.group.lint.dependencies]
flake8 = "^6"
black = "^24"
isort = "^5"
pylint = "^3"
mypy = "^1"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^7"
pytest-cov = "^4"

[build-system]
requires = ["poetry-core<2"]
build-backend = "poetry.core.masonry.api"
{%- else -%}
[project]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = "{{cookiecutter.short_description}}"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Framework :: Pytest",
    "Typing :: Typed",
]
authors = [
    {name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}"},
]

requires-python = ">=3.10"

dependencies = []

[project.optional-dependencies]
lint = [
    "flake8>=6",
    "black>=23",
    "isort>=5",
    "pylint>=3",
    "mypy>=1",
]
test = [
    "pytest>=7",
    "pytest-cov>=4",
]
build = [
    "build<2",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
{%- endif %}

[tool.black]
line-length = {{ cookiecutter.line_length }}

[tool.isort]
ensure_newline_before_comments = true
include_trailing_comma = true
line_length = {{ cookiecutter.line_length }}
multi_line_output = 3
split_on_trailing_comma = true

[tool.mypy]
strict = true
pretty = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pylint.BASIC]
module-rgx = "[a-z_][a-z0-9_]{2,32}$"
const-rgx = "[a-zA-Z_][a-zA-Z0-9_]{2,32}$"
class-rgx = "[A-Z_][a-zA-Z0-9]+$"
function-rgx = "([a-z_][a-z0-9_]{2,32}|(assert|test_|__)[a-z_][a-z0-9_]{2,80})$"
method-rgx = "([a-z_][a-z0-9_]{2,32}|(assert|test_|__)[a-z_][a-z0-9_]{2,80})$"
attr-rgx = "[a-z_][a-z0-9_]{2,32}$"
argument-rgx = "[a-z_][a-z0-9_]{2,32}$"
variable-rgx = "[a-z_][a-z0-9_]{2,32}$"
class-attribute-rgx = "([A-Za-z_][A-Za-z0-9_]{2,32}|(__.*__))$"
inlinevar-rgx = "[A-Za-z_][A-Za-z0-9_]*$"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "locally-disabled",
    "too-few-public-methods",
    "fixme",
]
msg-template = "{module}:{line} [{msg_id}: {symbol}] - {msg}"

[tool.pylint.REPORTS]
reports = "yes"

[tool.pylint.FORMAT]
max-line-length = {{ cookiecutter.line_length }}

[tool.pylint.SIMILARITIES]
min-similarity-lines = 6
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"
